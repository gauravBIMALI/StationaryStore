@using UserRoles.ViewModels
@model SellerLoginViewModel
@{
    ViewData["Title"] = "Login";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8">
            <div class="card shadow-lg">
                <div class="card-header bg-primary text-white">
                    <h2 class="text-center mb-0"><i class="fas fa-sign-in-alt me-2"></i>Login</h2>
                </div>
                <div class="card-body p-4">
                    <form asp-action="Login" asp-controller="Account" method="post" class="needs-validation" novalidate>
                        @Html.AntiForgeryToken()
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                        <div class="row g-3">
                            <!-- Email -->
                            <div class="col-12">
                                <div class="form-floating">
                                    <input type="email" asp-for="Email" class="form-control" id="email" placeholder="name@example.com" required />
                                    <label asp-for="Email">Email Address</label>
                                    <span asp-validation-for="Email" class="text-danger small"></span>
                                </div>
                            </div>

                            <!-- Password -->
                            <div class="col-12">
                                <div class="form-floating">
                                    <input type="password" asp-for="Password" class="form-control" id="password" placeholder="Password" required />
                                    <label asp-for="Password">Password</label>
                                    <span asp-validation-for="Password" class="text-danger small"></span>
                                </div>
                            </div>

                            <!-- Remember Me -->
                            <div class="col-12">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" asp-for="RememberMe" id="rememberMe">
                                    <label class="form-check-label" asp-for="RememberMe">
                                        Remember me
                                    </label>
                                </div>
                            </div>

                            <!-- Submit Button -->
                            <div class="col-12 mt-3">
                                <button type="submit" class="btn btn-primary btn-lg w-100 py-2">
                                    <i class="fas fa-sign-in-alt me-2"></i>Login
                                </button>
                            </div>

                            <!-- Links -->
                            <div class="col-12 text-center mt-4">
                                <div class="d-flex flex-column flex-md-row justify-content-center gap-3">
                                    <a asp-controller="Account" asp-action="ForgotPassword" class="text-decoration-none">
                                        <i class="fas fa-key me-1"></i>Forgot Password?
                                    </a>
                                    <a asp-controller="Account" asp-action="Register" class="text-decoration-none">
                                        <i class="fas fa-user-plus me-1"></i>Create New Account
                                    </a>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Client-side validation enhancement
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
}