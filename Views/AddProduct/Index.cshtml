@model IEnumerable<ClzProject.Models.Product>
@{
    ViewData["Title"] = "Product List";
    int sn = 1;
}
<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2><i class="fas fa-box-open me-2"></i>Product List</h2>
        <a class="btn btn-success" asp-action="Create">
            <i class="fas fa-plus me-1"></i>Add New Product
        </a>
    </div>
    <div class="card shadow-sm rounded-4">
        <div class="card-body">
            <table class="table table-striped table-bordered align-middle">
                <thead class="table-primary">
                    <tr>
                        <th>S.N</th>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Category</th>
                        <th>Image</th>
                        <th style="width: 180px;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@sn</td>
                            <td>@item.ProductName</td>
                            <td>@item.ProductDescription</td>
                            @* <td>@item.ProductPrice.ToString("C2")</td> *@
                            <td>Rs. @item.ProductPrice.ToString("N2")</td>
                            <td>@item.ProductQuantity</td>
                            <td>@item.CategoryType</td>
                            <td>
                                <div class="image-container" data-product-id="@item.ProductID">
                                    <div class="loading-spinner">
                                        <i class="fas fa-spinner fa-spin"></i> Loading...
                                    </div>
                                </div>
                            </td>
                            <td>
                                <a asp-action="Details" asp-route-id="@item.ProductID" class="btn btn-info btn-sm me-1">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <a asp-action="Edit" asp-route-id="@item.ProductID" class="btn btn-warning btn-sm me-1">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <form asp-action="Delete" asp-route-id="@item.ProductID" method="post" class="d-inline"
                                      onsubmit="return confirm('Are you sure you want to delete this product?');">
                                    <button type="submit" class="btn btn-danger btn-sm">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </form>
                            </td>
                        </tr>
                        sn++;
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<style>
    .image-container {
        width: 80px;
        height: 80px;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 1px solid #ddd;
        border-radius: 4px;
        background-color: #f8f9fa;
    }

    .loading-spinner {
        font-size: 12px;
        color: #666;
        text-align: center;
    }

    .product-image {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 4px;
    }

    .no-image {
        font-size: 11px;
        color: #999;
        text-align: center;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', async function() {
        const imageContainers = document.querySelectorAll('.image-container');

        // Load images one by one to avoid overwhelming the server
        for (let container of imageContainers) {
            const productId = container.dataset.productId;

            try {
                const response = await fetch(`/AddProduct/GetProductImage/${productId}`);

                if (response.ok) {
                    const data = await response.json();
                    if (data.imageBase64) {
                        container.innerHTML = `<img src="data:image/jpeg;base64,${data.imageBase64}"
                                              class="product-image"
                                              alt="Product Image" />`;
                    } else {
                        container.innerHTML = '<div class="no-image">No Image</div>';
                    }
                } else {
                    container.innerHTML = '<div class="no-image">No Image</div>';
                }
            } catch (error) {
                console.error('Failed to load image for product', productId, error);
                container.innerHTML = '<div class="no-image">Load Failed</div>';
            }

            // Small delay between requests to prevent server overload
            await new Promise(resolve => setTimeout(resolve, 100));
        }
    });
</script>